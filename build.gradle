plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

application {
  // Define the main class for the application.
  mainClass = 'MainEntry'
}


tasks.jar {
    enabled = false
}

mainClassName = 'MainEntry'

shadowJar {
    mergeServiceFiles()
    manifest {
        attributes 'Main-Class': mainClassName
    }
    from('.') {
        include 'gradle.properties'         
    }
    from {
        project.configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) };
    }
}


        // https://mvnrepository.com/artifact/org.postgresql/postgresql
dependencies {
implementation  group: 'org.openjfx', name: 'javafx', version: '11'
implementation  group: 'org.openjfx', name: 'javafx-controls', version: '12'
implementation  group: 'org.openjfx', name: 'javafx-fxml', version: '12'
implementation  group: 'org.openjfx', name: 'javafx-base', version: '12'
implementation group: 'org.postgresql', name: 'postgresql', version: '42.6.0'
}


repositories {
    mavenCentral()
}

javafx {
    version = "22.0.1"
    modules = [ 'javafx.controls', 'javafx.fxml', "javafx.graphics", "javafx.web"]
}

task buildDB(type: Exec){
    workingDir "src/main"
    environment "PGPASSWORD", "${PGPASSWORD}"
    environment "PGUSER", "${PGUSER}"
    environment "PGHOST", "${PGHOST}"
    environment "PGDATABASE", "${PGDATABASE}"

    
    commandLine 'powershell' , '/C' , 'py ./python/db_script.py'
    doLast{
        exec{
            workingDir "src/main"
            environment "PGPASSWORD", "${PGPASSWORD}"
    environment "PGUSER", "${PGUSER}"
    environment "PGHOST", "${PGHOST}"
    environment "PGDATABASE", "${PGDATABASE}"
            commandLine 'powershell' , '/C' , 'psql -f ./resources/sql/insert_tables.sql'
        }
        exec{
            workingDir "src/main"
            environment "PGPASSWORD", "${PGPASSWORD}"
    environment "PGUSER", "${PGUSER}"
    environment "PGHOST", "${PGHOST}"
    environment "PGDATABASE", "${PGDATABASE}"
            commandLine 'powershell' , '/C','psql -c \'\\copy inventory FROM "./resources/csv/inventory.csv" CSV HEADER\''
        }
        exec{
            workingDir "src/main"
            environment "PGPASSWORD", "${PGPASSWORD}"
    environment "PGUSER", "${PGUSER}"
    environment "PGHOST", "${PGHOST}"
    environment "PGDATABASE", "${PGDATABASE}"
    commandLine 'powershell' , '/C','psql -c \'\\copy menu FROM "./resources/csv/menu.csv" CSV HEADER\''
        }
        exec{
            workingDir "src/main"
            environment "PGPASSWORD", "${PGPASSWORD}"
    environment "PGUSER", "${PGUSER}"
    environment "PGHOST", "${PGHOST}"
    environment "PGDATABASE", "${PGDATABASE}"
    commandLine 'powershell' , '/C','psql -c \'\\copy overarching_items FROM "./resources/csv/overarching_items.csv" CSV HEADER\''
        }
        exec{
            workingDir "src/main"
            environment "PGPASSWORD", "${PGPASSWORD}"
    environment "PGUSER", "${PGUSER}"
    environment "PGHOST", "${PGHOST}"
    environment "PGDATABASE", "${PGDATABASE}"
    commandLine 'powershell' , '/C','psql -c \'\\copy ingredients_needed FROM "./resources/csv/ingredients_needed.csv" CSV HEADER\''
        }
        exec{
            workingDir "src/main"
            environment "PGPASSWORD", "${PGPASSWORD}"
    environment "PGUSER", "${PGUSER}"
    environment "PGHOST", "${PGHOST}"
    environment "PGDATABASE", "${PGDATABASE}"
    commandLine 'powershell' , '/C','psql -c \'\\copy employees FROM "./resources/csv/employees.csv" CSV HEADER\''
        }
        exec{
            workingDir "src/main"
            environment "PGPASSWORD", "${PGPASSWORD}"
    environment "PGUSER", "${PGUSER}"
    environment "PGHOST", "${PGHOST}"
    environment "PGDATABASE", "${PGDATABASE}"
    commandLine 'powershell' , '/C','psql -c \'\\copy passwords FROM "./resources/csv/passwords.csv" CSV HEADER\''
        }
        exec{
            workingDir "src/main"
            environment "PGPASSWORD", "${PGPASSWORD}"
    environment "PGUSER", "${PGUSER}"
    environment "PGHOST", "${PGHOST}"
    environment "PGDATABASE", "${PGDATABASE}"
    commandLine 'powershell' , '/C','psql -c \'\\copy order_history FROM "./resources/csv/order_history.csv" CSV HEADER\''
        }
         exec{
            workingDir "src/main"
            environment "PGPASSWORD", "${PGPASSWORD}"
    environment "PGUSER", "${PGUSER}"
    environment "PGHOST", "${PGHOST}"
    environment "PGDATABASE", "${PGDATABASE}"
    commandLine 'powershell' , '/C','psql -c \'\\copy order_items FROM "./resources/csv/order_items.csv" CSV HEADER\''
        }
        exec{
            workingDir "src/main"
            environment "PGPASSWORD", "${PGPASSWORD}"
    environment "PGUSER", "${PGUSER}"
    environment "PGHOST", "${PGHOST}"
    environment "PGDATABASE", "${PGDATABASE}"
    commandLine 'powershell' , '/C','psql -c \'WITH time AS (SELECT CURRENT_TIMESTAMP AS time) INSERT INTO Z_Report (Last_Report) SELECT time.time FROM time;\''
        }
    }
}


task dropAll{
    doLast{
        exec{
            workingDir "src/main"
            environment "PGPASSWORD", "${PGPASSWORD}"
            environment "PGUSER", "${PGUSER}"
            environment "PGHOST", "${PGHOST}"
            environment "PGDATABASE", "${PGDATABASE}"
            commandLine 'powershell' , '/C','psql -c \'DROP TABLE passwords;DROP TABLE ingredients_needed;DROP TABLE order_items;DROP TABLE order_history;DROP TABLE employees;DROP TABLE overarching_items;DROP TABLE menu;DROP TABLE inventory;DROP TABLE z_report;\''
        }
    }
}

task generateJavadoc(type: Javadoc) {
    source = sourceSets.main.allJava
    classpath = configurations.runtimeClasspath
    destinationDir = file("src/main/resources/javadocs")
}


run {
    args = ["${PGHOST}","${PGUSER}", "${PGPASSWORD}"]
}